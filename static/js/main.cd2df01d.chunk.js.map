{"version":3,"sources":["App.js","Redux/actions/index.js","Redux/reducers/counterReducer.js","Redux/reducers/authReducer.js","Redux/reducers/index.js","index.js"],"names":["App","counter","useSelector","state","auth","dispatch","useDispatch","className","onClick","type","counterReducer","action","authReducer","allReducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA2CeA,MAjCf,WACI,IAAMC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WACvCG,EAAOF,aAAY,SAACC,GAAD,OAAWA,EAAMC,QACpCC,EAAWC,cAEjB,OACI,sBAAKC,UAAU,MAAf,UACI,8CACgB,uBADhB,oCAGA,yCACA,6BAAKN,IACL,wBAAQO,QAAS,kBAAMH,ECrBxB,CACHI,KAAM,eDoBF,sBACA,wBAAQD,QAAS,kBAAMH,ECVxB,CACHI,KAAM,WDSF,mBACA,wBAAQD,QAAS,kBAAMH,ECjBxB,CACHI,KAAM,eDgBF,sBAEA,0DACA,gEACA,wBAAQD,QAAS,kBAAMH,ECTxB,CACHI,KAAM,YDQF,mBACA,wBAAQD,QAAS,kBAAMH,ECJxB,CACHI,KAAM,aDGF,oBACCL,EACG,8BACI,0HAKJ,O,OEzBDM,EAZQ,WAAwB,IAAvBP,EAAsB,uDAAd,EAAGQ,EAAW,uCAC1C,OAAQA,EAAOF,MACX,IAAK,YACD,OAAON,EAAQ,EACnB,IAAK,YACD,OAAOA,EAAQ,EACnB,IAAK,QACD,OAAgB,EACpB,QACI,OAAOA,ICCJS,EAVK,WAA4B,IAA3BT,EAA0B,wDAAXQ,EAAW,uCAC3C,OAAQA,EAAOF,MACX,IAAK,SACD,OAAO,EACX,IAAK,UACD,OAAO,EACX,QACI,OAAON,ICCJU,EAJKC,YAAgB,CAChCb,QAASS,EACTN,KAAMQ,ICGJG,EAAQC,YACVH,GAEJI,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRK,SAASC,eAAe,W","file":"static/js/main.cd2df01d.chunk.js","sourcesContent":["import \"./App.css\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {\n    decrement,\n    increment,\n    reset,\n    logIn,\n    logOut,\n} from \"./Redux/actions/index\";\n\nfunction App() {\n    const counter = useSelector((state) => state.counter);\n    const auth = useSelector((state) => state.auth);\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"App\">\n            <h1>\n                Hello World <br/> A little Redux Project. YaaY!\n            </h1>\n            <h3>Counter</h3>\n            <h3>{counter}</h3>\n            <button onClick={() => dispatch(increment())}>Increase</button>\n            <button onClick={() => dispatch(reset())}>Reset</button>\n            <button onClick={() => dispatch(decrement())}>Decrease</button>\n\n            <h2>For Logged in users only</h2>\n            <p>Log in to see a secret about me</p>\n            <button onClick={() => dispatch(logIn())}>Login</button>\n            <button onClick={() => dispatch(logOut())}>Logout</button>\n            {auth ? (\n                <div>\n                    <p>\n                        I don't know more than 50% of redux. But if you know 50% of it, you're like a Superman.\n                    </p>\n                </div>\n            ) : (\n                \"\"\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","export const increment = () => {\r\n    return {\r\n        type: \"INCREMENT\",\r\n    };\r\n};\r\n\r\nexport const decrement = () => {\r\n    return {\r\n        type: \"DECREMENT\",\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return {\r\n        type: \"RESET\",\r\n    };\r\n};\r\n\r\nexport const logIn = () => {\r\n    return {\r\n        type: \"LOG_IN\",\r\n    };\r\n};\r\n\r\nexport const logOut = () => {\r\n    return {\r\n        type: \"LOG_OUT\",\r\n    };\r\n};\r\n","const counterReducer = (state = 1, action) => {\r\n    switch (action.type) {\r\n        case \"INCREMENT\":\r\n            return state + 1;\r\n        case \"DECREMENT\":\r\n            return state - 1;\r\n        case \"RESET\":\r\n            return (state = 0);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default counterReducer;\r\n","const authReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case \"LOG_IN\":\r\n            return true;\r\n        case \"LOG_OUT\":\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default authReducer;\r\n","import counterReducer from \"./counterReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n    counter: counterReducer,\r\n    auth: authReducer,\r\n});\r\nexport default allReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport allReducers from \"./Redux/reducers\";\nimport { Provider } from \"react-redux\";\n\n// 创建 store\nconst store = createStore(\n    allReducers,\n);\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}